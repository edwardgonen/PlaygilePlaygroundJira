<tr class="mod-header">
    <h3>Playgile Studio Project Preparation Status for $project.name ($project.getKey())</h3>

    <html>

    <head>
        $webResourceManager.requireResourcesForContext("playgileProjectPreparationPlugin")
        <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
        <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
        <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js"
            integrity="sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ=="
            crossorigin="anonymous"></script>
        <style>
            .customMonth {
                margin: 20px;
                font-weight: bold;
            }

            .componentHeader span {
                margin-right: 20px;
            }

            .custom-link {
                color: #0052cc !important;
            }

            .backgroundColor1 {
                background: rgb(0 128 0 / 0.5) !important;
            }

            .backgroundColor2 {
                background: rgba(255, 255, 0, 0.5) !important;
            }

            .backgroundColor3 {
                background: rgba(255, 0, 0, 0.5) !important;
            }
        </style>
    </head>

    <body>
        <div class="pluginContent">
            <div class="accordion"></div>

        </div>
        #if (!$allisok)
        <h1 style="color:red">$messagetodisplay</h1>
        #end

        #if ($allisok)

        <div style="display: none;" id="datacontainer">$monthsrows</div>
        <div id="months-table" ; width="100%">
        </div>

        #end
        <script type="text/javascript">

            /**
            * Logic for debug mode
            */
            const DEBUG_MODE = eval(localStorage.pluginDebugMode) ? 'sendLog=1&' : '';
            /**
             * Url constants
             */
            const BASE_URL = '$baseurl';
            const PROJECT_NAME = /[^/]*$/.exec(location.pathname);
            const GET_FEATURE_DATA_URL = BASE_URL + '/plugins/servlet/getPreparationFeatures?' + DEBUG_MODE + 'projectKey=' + PROJECT_NAME;

            window.onload = () => {
                init()
            }
            function init() {
                /**
                 * Prepare DOM links
                 */
                let $accordion = $('.accordion')
                /**
                 * Request features data from servelet and draw it
                 */
                doPost(GET_FEATURE_DATA_URL, {}, addDataToTable)
            }
            function addDataToTable(data) {
                console.log(data);
                let dataList = data.featuresListByMonthYear;
                let accordionItems = [];
                dataList.forEach((data, i) => {
                    let month = moment(data.monthYear).format('MMMM');
                    let year = moment(data.monthYear).format('YYYY');
                    accordionItems.push(
                        componentHeader({
                            children: month + ' ' + year
                        }).addClass('customMonth'),
                        componentItemsBody({
                            children: componentItem({ array: data.featuresList })
                        })
                    )
                });
                $('.accordion').append(accordionItems)
                /**
                 * Create accordion for data
                 */
                $(document).ready(function () {
                    $('.accordion2').accordion({
                        collapsible: true,
                        active: 0,
                        heightStyle: "content"
                    });
                })
            }
            function componentItem({ array }) {
                let itemsArray = []
                array.forEach(_feature => {
                    let feature = _feature.projectPreparationIssue
                    itemsArray.push(
                        componentHeader({
                            children: componentFeatureHeader({ issueKey: feature.issueKey, issueSummary: feature.issueSummary, businessApprovalDate: feature.businessApprovalDate })
                        }).addClass('backgroundColor' + feature.tardiness),
                        componentItemsBody({
                            children: componentTasks({ tasks: feature.preparationTasks })
                        })
                    )
                })
                return $('<div class="accordion2">').append(itemsArray)
            }
            function componentFeatureHeader({ issueKey, issueSummary, businessApprovalDate }) {
                var _bad = moment(businessApprovalDate).format('LL')
                return `<a href="${BASE_URL}/browse/${issueKey}" target="_blank"><span>${issueKey}</span><span>${issueSummary}</span><span>${_bad}</span></a>`
            }
            function componentTasks({ tasks }) {
                let $table = $(`<table class="aui">`)
                $table.append(`<thead>
                                    <tr>
                                        <th id="basic-Key">Key</th>
                                        <th id="basic-Summary">Summary</th>
                                        <th id="basic-DueDate">Due Date</th>
                                        <th id="basic-Assignee">Assignee</th>
                                    </tr>
                                </thead>`)
                tasks.forEach(task => {
                    var _duedD = moment(task.dueDate).format('LL')
                    $table.append(`<tr class="backgroundColor${task.tardiness}"><td headers="basic-Key"><a class="custom-link" href="${BASE_URL}/browse/${task.issueKey}" target="_blank">${task.issueKey}</a></td>
                        <td headers="basic-Summary">${task.issueSummary}</td>
                        <td headers="basic-DueDate">${_duedD}</td>
                        <td headers="basic-Assignee">${task.assignee}</td></tr>`)
                });
                return $table
            }
            function componentHeader({ children }) {
                return $(
                    `<div class="componentHeader"></div>`
                ).append(children)
            }
            function componentItemsBody({ children }) {
                return $(
                    `<div componentItemsBody"></div>`
                ).append(children)
            }
            /**
            * Post request with error handling
            * @param {string} url
            * @param {{}} postData
            * @param {function} callback
            */
            function doPost(url, postData, callback) {
                jQuery.post(url, postData)
                    .done(function (textData) {
                        var jsonData = JSON.parse(textData)
                        if (!!jsonData.logInfo) {
                            console.warn(
                                `
url: ${url}
body: ${jsonData}
statusMessage: ${jsonData.statusMessage}
logInfo: ${jsonData.logInfo.replaceAll('<br>', '\n')}
`)
                        }
                        if (!!jsonData.statusMessage) { dataMessageError(jsonData) }
                        callback(jsonData)
                    })
                    .fail(function (err) {
                        alert("POST error")
                    })
            }
            /**
            * Logging error in console
            * @param {object} data
            */
            function dataMessageError(data) {
                AJS.banner({
                    body: data.statusMessage
                });
                console.log('----------------data.statusMessage----ERROR---------------')
                console.log(data.statusMessage)
                console.log(data)
            }
        </script>
    </body>
    </div>